 --Client List

SELECT * FROM Client_data group by ClientID;

CREATE TABLE Bad_cases as SELECT * FROM Client_data 
where 
CaseStatus like 'DO NOT CONTACT' 
or CaseStatus like 'Prospect' 
or CaseStatus like 'Unable To Contact';

CREATE TABLE good_cases as SELECT * FROM Client_data 
where 
CaseStatus like 'Active Client' 
or CaseStatus like 'Existing Customer';

SELECT * FROM good_cases;


ALTER TABLE good_cases add column consumer_advisor_name text;
ALTER TABLE good_cases add column mortgage_lender text;
ALTER TABLE good_cases add column mortgage_external_id text;
ALTER TABLE good_cases add column mortgage_refinances_mortgage_with_external_id text;
ALTER TABLE good_cases add column mortgage_charge int;
ALTER TABLE good_cases add column mortgage_loan_purpose text;
ALTER TABLE good_cases add column mortgage_payment_type text;
ALTER TABLE good_cases add column mortgage_type text;
ALTER TABLE good_cases add column mortgage_property_value int;
ALTER TABLE good_cases add column mortgage_loan_amount int;
ALTER TABLE good_cases add column mortgage_preferential_rate int;
ALTER TABLE good_cases add column mortgage_term int;
ALTER TABLE good_cases add column mortgage_expiry_date int;
ALTER TABLE good_cases add column mortgage_start_date int;
ALTER TABLE good_cases add column mortgage_description text;
ALTER TABLE good_cases add column property_external_id text;
ALTER TABLE good_cases add column property_value int;
ALTER TABLE good_cases add column property_address text;
ALTER TABLE good_cases add column consumer_external_id text;
ALTER TABLE good_cases add column consumer_submitted_but_not_completed text;
ALTER TABLE good_cases add column consumer_active text;
ALTER TABLE good_cases add column consumer_phone_number int;
ALTER TABLE good_cases add column consumer_name text;
ALTER TABLE good_cases add column consumer_email text;
ALTER TABLE good_cases add column mortgage_advisor_email text;
ALTER TABLE good_cases add column mortgage_advisor_name text;
ALTER TABLE good_cases add column consumer_advisor_email text;
ALTER TABLE good_cases add column consumer_datatpipe_id text;
ALTER TABLE good_cases add column property_datapipe_id text;
ALTER TABLE good_cases add column mortgage_datapipe_id text;
ALTER TABLE good_cases add column shared ownership flag text;

UPDATE good_cases set consumer_advisor_name = ServicingAdvisor;
UPDATE good_cases set mortgage_lender = '';
UPDATE good_cases set consumer_phone_number = TelMobile;
UPDATE good_cases set consumer_email = Email;
UPDATE good_cases set consumer_name = Forename || ' ' || Surname;
--UPDATE good_cases set property_address  = Address1 || "," || Address2 || "," || Town || "," || County || "," || Postcode;

create table distinct_case_id as SELECT * FROM good_cases group by Case_Id;

CREATE table joined_client_business as SELECT * FROM distinct_case_id 
left join business_register
on distinct_case_id.Case_ID = business_register.Case_Id_BR;

SELECT * FROM good_cases where Case_id like '2055084';

SELECT * FROM good_cases group by consumer_name,Address;

SELECT * FROM good_cases where Case_id like '2075434';

SELECT * FROM good_cases where Case_id like '2055319';


--Business Register

SELECT count(*),* FROM business_register where Type like 'Mortgage' group by Case_Id_BR;

Create table bus_reg_not_mortgage as SELECT count(*),* FROM business_register where Type not like 'Mortgage'  ;

Delete from business_register where Type not like 'Mortgage';

Create table bus_reg_multi_mortgage as SELECT count(*),* FROM business_register where Type like 'Mortgage' group by Case_Id_BR HAVING COUNT(*) > 1 ;
ALTER TABLE bus_reg_multi_mortgage add column duplicate_flag TEXT;
UPDATE bus_reg_multi_mortgage set duplicate_flag = 'y';


Create table BusReg_with_dup_flag as
SELECT business_register.*,
       bus_reg_multi_mortgage.duplicate_flag
  FROM business_register
    LEFT JOIN bus_reg_multi_mortgage
     ON business_register.Case_id_BR=bus_reg_multi_mortgage.Case_id_BR;
    

 Create table test_join as
SELECT opportunities.*,
       BusReg_with_dup_flag.*
  FROM opportunities
    LEFT JOIN BusReg_with_dup_flag
     ON opportunities.CaseID=BusReg_with_dup_flag.Case_id_BR;

SELECT * FROM BusReg_with_dup_flag where duplicate_flag <>'';

SELECT * FROM BusReg_with_dup_flag group by Case_id_BR;

SELECT count(*),* FROM opportunities group by Full_Names;

SELECT * FROM business_register where Client_One like "Gordon D'Silva";

SELECT * FROM business_register where Case_id_BR like '2055084';

SELECT * FROM business_register where Case_id_BR like '2075434';

SELECT * FROM business_register where Case_id_BR like '2055319';


--Opportunities

Create table opportunities_multi_mortgage as SELECT count(*),* FROM opportunities group by CaseID HAVING COUNT(*) > 1 ;
ALTER TABLE opportunities_multi_mortgage add column duplicate_flag TEXT;
UPDATE opportunities_multi_mortgage set duplicate_flag = 'y';

Create table opportunities_with_dup_flag as
SELECT opportunities.*,
       opportunities_multi_mortgage.duplicate_flag
  FROM opportunities
    LEFT JOIN opportunities_multi_mortgage
     ON opportunities.CaseID=opportunities_multi_mortgage.CaseID;

SELECT duplicate_flag,* FROM opportunities_with_dup_flag order by duplicate_flag,CaseID;

SELECT * FROM opportunities_with_dup_flag where CaseID like '2055084';

SELECT * FROM opportunities_with_dup_flag where CaseID like '2075434';

SELECT * FROM opportunities_with_dup_flag where CaseID like '2055319';

SELECT count (*),* FROM opportunities group by CaseID, Due_Date ;


SELECT *
FROM Orders
LEFT JOIN OrderLines ON OrderLines.OrderID=Orders.ID
WHERE Orders.ID = 12345
